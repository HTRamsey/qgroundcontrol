name: Linux

on:
  push:
    branches:
      - master
      - 'Stable*'
    tags:
      - 'v*'
    paths-ignore:
      - 'android/**'
      - 'deploy/**'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - 'android/**'
      - 'deploy/**'
      - 'docs/**'
      - '.github/workflows/docs_deploy.yml'
      - '.github/workflows/android.yml'
      - '.github/workflows/macos.yml'
      - '.github/workflows/windows.yml'

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        BuildType: [Debug, Release]

    env:
      ARTIFACT: QGroundControl-x86_64.AppImage

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-tags: true

      - name: Install Build Tools
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
          sudo apt install gcc-13 g++-13
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100 --slave /usr/bin/g++ g++ /usr/bin/g++-13 --slave /usr/bin/gcov gcov /usr/bin/gcov-13
          sudo update-alternatives --set gcc /usr/bin/gcc-13

      - name: Install Vulkan
        run: |
          wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-focal.list http://packages.lunarg.com/vulkan/lunarg-vulkan-focal.list
          sudo apt update
          sudo apt install vulkan-sdk

      - name: Install Qt
        uses: ./.github/actions/qt
        with:
          host: linux
          arch: gcc_64

      # - name: Build GStreamer
      #   uses: ./.github/actions/gstreamer

      - name: Build QGC
        uses: ./.github/actions/qgc
        with:
          BuildType: ${{ matrix.BuildType }}

      - name: Upload Build File
        uses: ./.github/actions/upload
        if: inputs.BuildType == 'Release' && github.repository == 'mavlink/qgroundcontrol'
        with:
          artifact_name: ${{ env.ARTIFACT }}
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          source: ''
