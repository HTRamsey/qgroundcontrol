name: Windows

on:
  push:
    branches:
      - master
      - 'Stable*'
    tags:
      - 'v*'
    paths-ignore:
      - 'docs/**'
      - 'android/**'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'android/**'

defaults:
  run:
    shell: cmd

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        BuildType: [Debug, Release]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true

      - name: Set up Cache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-${{ matrix.BuildType }}
          restore-keys: ${{ runner.os }}-${{ matrix.BuildType }}
          max-size: 1G
          append-timestamp: false
          variant: sccache

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.*
          aqtversion: ==3.1.*
          host: windows
          target: desktop
          arch: win64_msvc2019_64
          dir: ${{ runner.temp }}
          modules: qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          setup-python: true
          cache: true

      - name: Install Dependencies
        run: choco install --no-progress ninja jom -y

      - name: Setup GStreamer
        uses: blinemedical/setup-gstreamer@v1
        with:
          version: 1.18.6

      - name: Set up Visual Studio shell
        uses: ilammy/msvc-dev-cmd@v1

      - name: Create build directory
        run: mkdir ${{ runner.temp }}\shadow_build_dir

      - name: Configure
        working-directory: ${{ runner.temp }}\shadow_build_dir
        env:
          STABLE_BUILD: ${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') }}
        run: |
          if ${{ matrix.BuildType }}==Debug (
            cmake -S ${{ github.workspace }} -B . -G Ninja ^
              -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }} ^
              -DQGC_STABLE_BUILD=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'ON' || 'OFF' }}
          ) else (
            qmake -r ${{ github.workspace }}\qgroundcontrol.pro ^
              CONFIG+=installer ^
              CONFIG+=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'StableBuild' || 'DailyBuild' }}
          )

      - name: Build
        working-directory: ${{ runner.temp }}\shadow_build_dir
        run: |
          if ${{ matrix.BuildType }}==Debug (
            cmake --build . --target all --config ${{ matrix.BuildType }}
          ) else (
            jom -j%NUMBER_OF_PROCESSORS%
          )

      - name: Install
        if: matrix.BuildType == 'Debug'
        working-directory: ${{ runner.temp }}\shadow_build_dir
        run: cmake --install .

      - name: Upload Build File
        if: matrix.BuildType == 'Release'
        uses: ./.github/actions/upload
        with:
          artifact_name: QGroundControl-installer.exe
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          source: staging
