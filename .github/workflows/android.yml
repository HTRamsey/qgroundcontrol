name: Android 32/64-bit

on:
  push:
    branches:
      - master
      - 'Stable*'
    tags:
      - 'v*'
    paths-ignore:
      - 'docs/**'
  pull_request:
    paths-ignore:
      - 'docs/**'

defaults:
  run:
    shell: bash

jobs:
  build_debug:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true

      - name: Setup Java environment
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Cache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
          key: ${{ runner.os }}-Android-Debug
          restore-keys: ${{ runner.os }}-Android-Debug
          max-size: 1G
          append-timestamp: false

      - name: Install Qt for Linux
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.*
          aqtversion: ==3.1.*
          host: linux
          target: desktop
          dir: ${{ runner.temp }}
          modules: qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          setup-python: true
          cache: true

      - name: Install Qt6 for Android (armv7)
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.*
          aqtversion: ==3.1.*
          host: linux
          target: android
          arch: android_armv7
          dir: ${{ runner.temp }}
          modules: qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          cache: true

      - name: Install Qt6 for Android (arm64_v8a)
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.*
          aqtversion: ==3.1.*
          host: linux
          target: android
          arch: android_arm64_v8a
          extra: --autodesktop
          dir: ${{ runner.temp }}
          modules: qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          cache: true

      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        env:
          GST_VERSION: 1.18.5
        run: |
          sudo apt update
          sudo apt install -y ninja-build
          wget --quiet https://gstreamer.freedesktop.org/data/pkg/android/${GST_VERSION}/gstreamer-1.0-android-universal-${GST_VERSION}.tar.xz
          mkdir gstreamer-1.0-android-universal-${GST_VERSION}
          tar xf gstreamer-1.0-android-universal-${GST_VERSION}.tar.xz -C gstreamer-1.0-android-universal-${GST_VERSION}

      - name: Setup env
        run: |
          echo "QT_HOST_PATH=${Qt6_DIR}/../gcc_64" >> $GITHUB_ENV
          chmod a+x ${Qt6_DIR}/bin/qt-cmake
          mkdir ${{ runner.temp }}/shadow_build_dir

      - name: Configure
        working-directory: ${{ runner.temp }}/shadow_build_dir
        env:
          STABLE_BUILD: ${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') }}
        run: ${Qt6_DIR}/bin/qt-cmake -S ${{ github.workspace }} -B . -G Ninja \
              -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }} \
              -DQT_ANDROID_ABIS="armeabi-v7a;arm64-v8a" \
              -DQT_HOST_PATH=${{ env.QT_HOST_PATH }} \
              -DQT_DEBUG_FIND_PACKAGE=ON \
              -DQT_ANDROID_MULTI_ABI_FORWARD_VARS=="QGC_STABLE_BUILD" \
              -DQGC_STABLE_BUILD=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'ON' || 'OFF' }}

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: cmake --build . --target all

  build_release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - eabi: armeabi-v7a
            arch: android_armv7
            ARTIFACT: QGroundControl32.apk
          - eabi: arm64-v8a
            arch: android_arm64_v8a
            ARTIFACT: QGroundControl64.apk

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true

      - name: Setup Java environment
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Cache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
          key: ${{ runner.os }}-${{ matrix.arch }}-Release
          restore-keys: ${{ runner.os }}-${{ matrix.arch }}-Release
          max-size: 1G
          append-timestamp: false

      - name: Install Qt for Linux
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.*
          aqtversion: ==3.1.*
          host: linux
          target: desktop
          dir: ${{ runner.temp }}
          modules: qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          setup-python: true
          cache: true

      - name: Install Qt6 for Android
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.*
          aqtversion: ==3.1.*
          host: linux
          target: android
          arch: ${{ matrix.arch }}
          extra: --autodesktop
          dir: ${{ runner.temp }}
          modules: qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          cache: true

      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        env:
          GST_VERSION: 1.18.5
        run: |
          sudo apt update
          sudo apt install -y ninja-build
          wget --quiet https://gstreamer.freedesktop.org/data/pkg/android/${GST_VERSION}/gstreamer-1.0-android-universal-${GST_VERSION}.tar.xz
          mkdir gstreamer-1.0-android-universal-${GST_VERSION}
          tar xf gstreamer-1.0-android-universal-${GST_VERSION}.tar.xz -C gstreamer-1.0-android-universal-${GST_VERSION}

      - name: Create build directory
        run: mkdir ${{ runner.temp }}/shadow_build_dir

      - name: Configure
        working-directory: ${{ runner.temp }}/shadow_build_dir
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        run: qmake -r ${{ github.workspace }}/qgroundcontrol.pro -spec android-clang \
              ANDROID_ABIS="${{ matrix.eabi }}" \
              CONFIG+=installer \
              CONFIG+=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'StableBuild' || 'DailyBuild' }}

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: make -j$(nproc)

      - name: Upload Build File
        uses: ./.github/actions/upload
        with:
          artifact_name: ${{ matrix.ARTIFACT }}
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
