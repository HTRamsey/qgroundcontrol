name: iOS

# Build QGroundControl for iOS (manual trigger only)

on:
  workflow_dispatch:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' && github.ref_type != 'tag' }}

permissions:
  contents: read

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 120

    strategy:
      matrix:
        build_type: [Release]

    defaults:
      run:
        shell: bash

    env:
      ARTIFACT: QGroundControl.app
      PACKAGE: QGroundControl
      QT_VERSION: 6.10.0

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: ${{ github.ref_type == 'tag' && 0 || 1 }}
          fetch-tags: true

      - name: Initial Setup
        uses: ./.github/actions/common

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Setup Caching
        uses: ./.github/actions/cache
        with:
          host: mac
          target: ios
          build-type: ${{ matrix.build_type }}
          cpm-modules: ${{ runner.temp }}/build/cpm_modules

      - name: Install Qt for MacOS
        uses: ./.github/actions/qt-install
        with:
          version: ${{ env.QT_VERSION }}
          host: mac
          target: desktop
          arch: clang_64
          dir: ${{ runner.temp }}

      - name: Install Qt for iOS
        uses: ./.github/actions/qt-install
        with:
          version: ${{ env.QT_VERSION }}
          host: mac
          target: ios
          arch: ios
          dir: ${{ runner.temp }}

      - name: Configure
        working-directory: ${{ runner.temp }}/build
        run: ${{ env.QT_ROOT_DIR }}/bin/qt-cmake -S ${{ github.workspace }} -B . -G Ninja
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
              -DQT_HOST_PATH="${{ env.QT_ROOT_DIR }}/../macos"
              -DQGC_STABLE_BUILD=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'ON' || 'OFF' }}

      - name: Build
        working-directory: ${{ runner.temp }}/build
        run: |
          BUILD_START_TIME=$(date +%s)
          cmake --build . --target all --config ${{ matrix.build_type }} --parallel
          BUILD_END_TIME=$(date +%s)
          BUILD_DURATION=$((BUILD_END_TIME - BUILD_START_TIME))
          echo "Build completed in ${BUILD_DURATION} seconds"
          echo "BUILD_DURATION=${BUILD_DURATION}" >> $GITHUB_ENV

      - name: Save App
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE }}
          path: ${{ runner.temp }}/build/*.app
          retention-days: ${{ github.ref_type == 'tag' && 90 || 7 }}
