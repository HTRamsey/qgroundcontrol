name: Linux Debug and Test

on:
  push:
    branches:
    - 'master'
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
    - '*'
    paths-ignore:
      - 'docs/**'

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.6.*
  BUILD_TYPE:   ${{ fromJSON('["DailyBuild", "StableBuild"]')[ github.ref_type == 'tag' || contains(github.ref, 'Stable_' ) ] }}

jobs:
  build:
    runs-on:  ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - run: sudo apt update

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
          key: ${{ runner.os }}-Debug
          restore-keys: ${{ runner.os }}-Debug
          max-size: "2G"
          append-timestamp: false

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          aqtversion:   ==3.1.*
          host:         linux
          target:       desktop
          dir:          ${{ runner.temp }}
          modules:      qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          setup-python: true
          cache: true

      - name: Install dependencies
        run:  |
              sudo apt-get install -y libxcb-xinerama0 libxkbcommon-x11-0 libxcb-cursor0
              sudo apt-get install -y libsdl2-dev
              sudo apt-get install -y libgstreamer-plugins-base1.0-dev libgstreamer1.0-0:amd64 libgstreamer1.0-dev
              sudo apt-get install -y binutils ninja-build

      - name: Build
        run:  |
              mkdir ${{ runner.temp }}/shadow_build_dir
              cmake -S ${SOURCE_DIR} -B ${SOURCE_DIR}/shadow_build_dir/ -G Ninja -DCMAKE_BUILD_TYPE=Debug
              cmake --build ${SOURCE_DIR}/shadow_build_dir/ --target all
              cmake --install ${SOURCE_DIR}/shadow_build_dir

      - name: Create AppImage
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run:  |
              wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
              chmod a+x ./linuxdeployqt-continuous-x86_64.AppImage
              ./linuxdeployqt-continuous-x86_64.AppImage ${SOURCE_DIR}/shadow_build_dir/staging/share/applications/org.mavlink.qgroundcontrol.desktop -unsupported-allow-new-glibc -verbose=2 -appimage

      - name: Run unit tests
        working-directory:  ${{ runner.temp }}/shadow_build_dir
        run:  |
              mkdir -p ~/.config/QtProject/
              cp ${SOURCE_DIR}/test/qtlogging.ini ~/.config/QtProject/
              export QT_FATAL_WARNINGS=1
              xvfb-run -a ${SOURCE_DIR}/shadow_build_dir/staging/bin/QGroundControl --unittest
