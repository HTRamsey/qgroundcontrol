# The 32 and 64 bit version of these actions should be kept in sync
name: Android 32/64-bit Debug

on:
  push:
    branches:
      - 'master'
      - 'Stable*'
    tags:
      - 'v*'
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
    - '*'
    paths-ignore:
      - 'docs/**'

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.6.*
  BUILD_TYPE:   ${{ fromJSON('["DailyBuild", "StableBuild"]')[ github.ref_type == 'tag' || contains(github.ref, 'Stable_' ) ] }}

jobs:
  build:
    runs-on:  ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - run: sudo apt update

      - name: Setup Java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
          key: ${{ runner.os }}-Android-Debug
          restore-keys: ${{ runner.os }}-Android-Debug
          max-size: "2G"
          append-timestamp: false

      - name: Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: git fetch --all --tags -f --depth 1

      - name: Install Qt for Linux
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          aqtversion:   ==3.1.*
          host:         linux
          target:       desktop
          dir:          ${{ runner.temp }}
          modules:      qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          setup-python: true
          cache:        true

      - name: Install Qt6 for Android (armv7)
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          aqtversion:   ==3.1.*
          host:         linux
          target:       android
          arch:         android_armv7
          extra:        --autodesktop
          dir:          ${{ runner.temp }}
          modules:      qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          setup-python: true
          cache:        true

      - name: Install Qt6 for Android (arm64_v8a)
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          aqtversion:   ==3.1.*
          host:         linux
          target:       android
          arch:         android_arm64_v8a
          extra:        --autodesktop
          dir:          ${{ runner.temp }}
          modules:      qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          setup-python: true
          cache:        true

      - name:               Install gstreamer
        working-directory:  ${{ github.workspace }}
        run: |
            wget --quiet https://gstreamer.freedesktop.org/data/pkg/android/1.18.5/gstreamer-1.0-android-universal-1.18.5.tar.xz
            mkdir gstreamer-1.0-android-universal-1.18.5
            tar xf gstreamer-1.0-android-universal-1.18.5.tar.xz -C gstreamer-1.0-android-universal-1.18.5

      - name: Install dependencies
        run:  sudo apt-get install -y ninja-build

      - name: Setup env
        run: echo "QT_HOST_PATH=${Qt6_DIR}/../gcc_64" >> $GITHUB_ENV

      - name: Create build directory
        run:  mkdir ${{ runner.temp }}/shadow_build_dir

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run:  |
            chmod a+x ${Qt6_DIR}/bin/qt-cmake
            ${Qt6_DIR}/bin/qt-cmake -S ${{ env.SOURCE_DIR }} -B ${{ runner.temp }}/shadow_build_dir -G Ninja \
              -DCMAKE_BUILD_TYPE=Debug \
              -DBUILD_TESTING:BOOL=OFF \
              -DQT_ANDROID_ABIS="armeabi-v7a;arm64-v8a" \
              -DQT_HOST_PATH:PATH=${{ env.QT_HOST_PATH }} \
              -DQT_DEBUG_FIND_PACKAGE=ON
            cmake --build ${{ runner.temp }}/shadow_build_dir --target all
